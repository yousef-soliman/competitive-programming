#include <iostream>
#include <string>
#include <cstdio>
#include <map>
#include <algorithm>
#include <stack>
#include <queue>
#include <sstream>
#include <utility>
#include <cmath>
#include <bitset>
#include <cstring>
#include <utility>
#include <set>
#include <cctype>
#include <list>
#include <climits>
#include <cstdlib>
#define ii pair<int,int>
#define psi pair<string,int>
#define vi vector<int>
#define vvi vector <vector<int> >
#define vvc vector <vector<char> >
#define vs vector<string>
#define vl vector<long long>
#define vii vector<ii>
#define mp make_pair
#define gl(s) getline(cin , s)
#define max3(x, y, z) max(x,max(y,z))  
#define min3(x, y, z) min(x,min(y,z))
#define mmx INT_MAX 
#define mmn INT_MIN
typedef long long ll;
using namespace std;
int dr[] = {0, 0 , 1, -1, 1, -1, 1, -1};
int dc[] = {1, -1, 0, 0, 1, -1, -1, 1};
vs rc;
int N ,M;
void floodfill(int r,int c) {
	if(r < 0 || r >= N || c < 0 || c >= rc[r].size() ) return ;
	if(rc[r][c] == 'X' || rc[r][c] == '#') return ;
	rc[r][c] = '#';
	for(int i = 0;i < 8; i++) {
		floodfill(r+dr[i],c + dc[i]);
	}
}

int main(){	
	int T;
	cin >> T;
	getchar();
	int t = 0;
	while(T--) {
		string s,e;
		while(1) {
			gl(s);
			if(s[0] == '_') {
				e = s;
				break;
			}
			rc.push_back(s);
		}
		N = rc.size();
		bool f = 1;
		for(int i = 0;i < N && f; i++) {
			for(int j = 0;j < rc[i].size(); j++) {
				if(rc[i][j] == '*') {
					floodfill(i,j);
					f = 0;
					break;
				}
			}
		}
		for(int i = 0;i < rc.size(); i++){
			cout << rc[i] << endl;
		}
		cout << e << endl;
		rc.clear();
		
	}
	
	
	return 0;
}




