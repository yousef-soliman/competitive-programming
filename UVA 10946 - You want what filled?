#include <iostream>
#include <string>
#include <cstdio>
#include <map>
#include <algorithm>
#include <stack>
#include <queue>
#include <sstream>
#include <utility>
#include <cmath>
#include <bitset>
#include <cstring>
#include <utility>
#include <set>
#include <cctype>
#include <list>
#include <climits>
#include <cstdlib>
#define ii pair<int,int>
#define psi pair<string,int>
#define vi vector<int>
#define vvi vector <vector<int> >
#define vvc vector <vector<char> >
#define vs vector<string>
#define vl vector<long long>
#define vii vector<ii>
#define mp make_pair
#define gl(s) getline(cin , s)
#define max3(x, y, z) max(x,max(y,z))  
#define min3(x, y, z) min(x,min(y,z))
#define mmx INT_MAX 
#define mmn INT_MIN
typedef long long ll;
int dr_k[] = {1, 2 , -1, 2, -2, -2, 1, -1};
int dc_k[] = {2, 1, 2, -1, 1, -1, -2, -2};

using namespace std;
int dr[] = {1, -1, 0, 0};
int dc[] = {0, 0, 1, -1};
char g[51][51];
int cnt = 0;
int l,m;
void floodfill(int r,int c,char cc) {
	if(r < 0|| r >= l||c < 0|| c >= m)return;
	if(g[r][c] != cc) return;
	g[r][c] = '.';
	cnt++;
	for(int i = 0; i < 4; i++) {
		floodfill(r+dr[i],c+dc[i],cc);
	}
	
}
bool sortby(ii p,ii p2) {
	if(p.first != p2.first) {
		return p.first > p2.first;
		
	}
	return (p.second <  p2.second);
	
}
int main(){	
	int t = 0;
	while(cin >> l >> m && l && m) {
		t++;
		memset(g,0,sizeof(g));
		getchar();
		for(int i = 0; i < l ;i++) {
			for(int j = 0; j < m;j++) {
				scanf("%c",&g[i][j]);
			}
			getchar();
		}
		vector<pair<int,char> > v;
		for(int i = 0; i < l;i++){
			for(int j = 0; j < m;j++){
				cnt = 0;
				char c = g[i][j];
				if(g[i][j] != '.') {
					floodfill(i,j,c);
					v.push_back(mp(cnt,c));
				}
			}
		}
		sort(v.begin(),v.end(),sortby);
		printf("Problem %d:\n",t);
		for(int i = 0; i < v.size();i++){
			cout << v[i].second<< " " <<v[i].first <<endl;
		}
		v.clear();
	}
	return 0;
}
