#include <iostream>
#include <string>
#include <cstdio>
#include <map>
#include <algorithm>
#include <stack>
#include <queue>
#include <sstream>
#include <utility>
#include <cmath>
#include <bitset>
#include <cstring>
#include <utility>
#include <set>
#include <cctype>
#include <list>
#include <climits>
#define ii pair<int,int>
#define psi pair<string,int>
#define vi vector<int>
#define vvi vector <vector<int> >
#define vvc vector <vector<char> >
#define vs vector<string>
#define vl vector<long long>
#define vii vector<ii>
#define mp make_pair
#define gl(s) getline(cin , s)
#define max3(x, y, z) max(x,max(y,z))  
#define min3(x, y, z) min(x,min(y,z))
#define mmx INT_MAX 
#define mmn INT_MIN
using namespace std;
typedef long long ll;
vvi v;
int memo[210][25];
int sum = 20;
int c = 3;
int cnt = 0;
int backtrack(int p, int g) {
	if( p < 0) return mmn;
	if(g == c) {
		return sum - p;
	} 
	if(memo[p][g] != -1) {
		return memo[p][g];
	}
	int ans = -1;
	for(int i= 0; i < v[g].size();i++) {
		p = p-v[g][i];
		ans = max(ans,backtrack(p,g+1));
		p = p+v[g][i];
	}
	return memo[p][g] = ans;
}
int main() {
	
	int T;
	cin >> T;
	int n;
	while(T--) {
		cin >> sum >> c;
		int temp =c;
		while(temp--) { 
			vi vv;
			cin >> n;
			int x;
			for(int  i = 0; i < n;i++) {
				cin >> x;
				vv.push_back(x);
			}
			v.push_back(vv);
		}
		memset(memo, -1, sizeof(memo));
		int res = backtrack(sum,0);
		if(res < 0) cout <<"no solution" << endl;
		else cout << res << endl;
		v.clear();
	}
	return 0;
}


