#include <iostream>
#include <string>
#include <cstdio>
#include <map>
#include <algorithm>
#include <stack>
#include <queue>
#include <sstream>
#include <utility>
#include <cmath>
#include <bitset>
#include <cstring>
#include <utility>
#include <set>
#include <cctype>
#include <list>
#include <climits>
#include <cstdlib>
#define ii pair<int,int>
#define psi pair<string,int>
#define vi vector<int>
#define vvi vector <vector<int> >
#define vvc vector <vector<char> >
#define vs vector<string>
#define vc vector<char>
#define vl vector<long long>
#define vii vector<ii>
#define mp make_pair
#define gl(s) getline(cin , s)
#define max3(x, y, z) max(x,max(y,z))  
#define min3(x, y, z) min(x,min(y,z))
#define mmx INT_MAX 
#define INF 1<<10 
#define mmn INT_MIN
#define all(v) v.begin(),v.end()
#define distance(x,y) sqrt(pow(x.first - y.first ,2) + pow(x.second - y.second ,2))
typedef long long ll;
int dr_k[] = {1, 2 , -1, 2, -2, -2, 1, -1};
int dc_k[] = {2, 1, 2, -1, 1, -1, -2, -2};
int dr[] = {1, 0, 0, -1, 1, 1, -1, -1};
int dc[] = {0, 1, -1, 0, 1, -1, 1, -1};
int dt[] = {-1, 1};
using namespace std;
vi A(22);
ll dp[22][10000];
ll rec(int i,int rem) {
	if(rem == 0) return 1;
	else if(rem < 0) return 0;
	else if(i == 22) return 0;
	if(dp[i][rem] != -1) return dp[i][rem];
	ll &cnt = dp[i][rem] = 0;
	cnt = rec(i+1,rem)+rec(i,rem-A[i]);
	return cnt;
}
int main() {
	int N;
	memset(dp,-1,sizeof(dp));
	for(int i = 0;i < 22; i++) {
		A[i] = i*i*i;
	}
	
	while(cin >> N) {
		cout << rec(0,N) << endl; 
	}
	return 0;
}

